name: Deploy to Neocities

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout your repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install Neocities package
      - name: Install Neocities module
        run: npm install neocities

      # Step 4: Deploy with username/password
      - name: Deploy to Neocities
        env:
          NEOCITIES_USERNAME: ${{ secrets.NEOCITIES_USERNAME }}
          NEOCITIES_PASSWORD: ${{ secrets.NEOCITIES_PASSWORD }}
        run: |
          node -e "
          const Neocities = require('neocities');
          const fs = require('fs');
          const path = require('path');

          const username = process.env.NEOCITIES_USERNAME;
          const password = process.env.NEOCITIES_PASSWORD;

          const api = new Neocities(username, password);

          // Collect all files in the repo
          function getFiles(dir, fileList = []) {
              const files = fs.readdirSync(dir);
              files.forEach((file) => {
                  const filePath = path.join(dir, file);
                  const stat = fs.statSync(filePath);
                  if (stat.isDirectory()) {
                      getFiles(filePath, fileList);
                  } else {
                      fileList.push({
                          name: path.relative('.', filePath).replace(/\\/g, '/'),
                          path: filePath,
                      });
                  }
              });
              return fileList;
          }

          const filesToUpload = getFiles('.');

          // Upload files to Neocities
          api.upload(filesToUpload, (resp) => {
              if (resp.result === 'success') {
                  console.log('Files successfully uploaded to Neocities.');
              } else {
                  console.error('Error uploading files:', resp.message);
                  process.exit(1);
              }
          });
          "
